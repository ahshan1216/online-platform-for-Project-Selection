CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    role ENUM('Student', 'Teacher') NOT NULL,
    student_id VARCHAR(50),
    teacher_id VARCHAR(50),
    id_photo VARCHAR(255),
    profile_picture VARCHAR(255),
    semester VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE summer24 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    session VARCHAR(50),


CREATE TABLE project_students (
    id INT AUTO_INCREMENT PRIMARY KEY,
    group_number INT,
    student_id VARCHAR(50),
    FOREIGN KEY (project_id) REFERENCES summer24(id),
    FOREIGN KEY (student_id) REFERENCES users(student_id)
);

    group_number VARCHAR(50),
    status VARCHAR(50),
    approved_by_faculty VARCHAR(100),
    project_name VARCHAR(200),
    student_id1 VARCHAR(50),
    student_id2 VARCHAR(50),
    student_id3 VARCHAR(50),
project_description LONGTEXT,
    create_time VARCHAR(100)
);




CREATE TABLE summer24 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    session VARCHAR(50),
    group_number INT,
    status VARCHAR(50),
    approved_by_faculty VARCHAR(100),
    project_name VARCHAR(200) UNIQUE,
    student_id1 VARCHAR(50),
    student_id2 VARCHAR(50),
    student_id3 VARCHAR(50),
    project_description LONGTEXT,
    create_time VARCHAR(100)
);

DELIMITER //

CREATE TRIGGER set_group_number_auto_increment
BEFORE INSERT ON summer24
FOR EACH ROW
BEGIN
    DECLARE next_group_number INT; -- Declare the variable here
    IF NEW.group_number IS NULL THEN
        SELECT IFNULL(MAX(group_number), 0) + 1 INTO next_group_number FROM summer24;
        SET NEW.group_number = next_group_number;
    END IF;
END;
//

DELIMITER ;





















new,



CREATE TABLE users (
    
    student_id VARCHAR(50) PRIMARY KEY,
    name VARCHAR(100),
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    role ENUM('Student', 'Teacher') NOT NULL,
    
    teacher_id VARCHAR(50),
    id_photo VARCHAR(255),
    profile_picture VARCHAR(255),
    semester VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



SHOW TRIGGERS;
DROP TRIGGER IF EXISTS ignore_empty_student_id_insert;
<script>
        document.getElementById("projectForm1").addEventListener("submit", function(event) {
    event.preventDefault(); // Prevent default form submission

    var formData = new FormData(this); // Create FormData object from form

    // Make a POST request to submit.php with form data
    fetch(this.action, {
        method: 'POST',
        body: formData // Include form data in the request body
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok'); // Throw error if response is not ok
        }
        return response.text(); // Read response body as text
    })
    .then(data => {
        console.log(data); // Log response body
        // Handle response data (if needed)
    })
    .catch(error => {
        console.error('Error:', error); // Log and handle errors
    });
});

    </script>
